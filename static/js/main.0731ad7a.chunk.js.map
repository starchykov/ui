{"version":3,"sources":["App.module.css","Component/Login/Login.module.css","redux/api.js","redux/authReducer.js","redux/appReducer.js","Component/Common/Logo/Logo.png","Component/Common/Logo/Logo.jsx","Component/Header/Header.jsx","Component/utils/Validators/Validators.js","Component/Common/Input/FormControl.jsx","Component/Login/Login.jsx","App.js","redux/reduxStore.js","index.js","Component/Common/Input/FormControl.module.css","Component/Header/Header.module.css"],"names":["module","exports","instance","axios","baseURL","withCredentials","headers","LoginApi","Login","data","a","post","then","response","catch","err","console","log","status","Logout","delete","AuthApi","get","AUTHORIZE_ME","SET_USER_INFO","DEL_USER_INFO","initialState","authData","id","login","email","isAuthorized","currentUser","authorize","props","dispatch","resultCode","type","authorizationReducer","state","action","currentUserData","APP_INITIALIZED","isInitialized","appInitialized","Logo","src","logo","alt","Header","className","s","header","to","activeClassName","active","menuItem","required","value","FormControl","input","meta","child","hasError","touched","error","form","LoginForm","AddPostForm","children","InputForm","restProps","LoginReduxForm","reduxForm","onSubmit","handleSubmit","commonError","inputContainer","Field","component","name","placeholder","validate","checkBox","connect","authorization","LoginMe","responseMessage","message","length","stopSubmit","_error","loginBox","formData","App","this","initialization","appWrapper","path","render","Component","compose","app","withRouter","reducers","combineReducers","formReducer","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0731ad7a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"appWrapper\":\"App_appWrapper__2tfMT\",\"appContent\":\"App_appContent__3nq_u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginBox\":\"Login_loginBox__1p4CD\",\"commonError\":\"Login_commonError__3nMxi\",\"inputContainer\":\"Login_inputContainer__1u4gd\",\"checkBox\":\"Login_checkBox__2UiTQ\"};","import React from 'react'\r\nimport * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://starchykov.herokuapp.com/',\r\n    withCredentials: true,\r\n    headers: {}\r\n});\r\n\r\n\r\nexport const LoginApi = {\r\n    Login: async (data) => {\r\n        debugger\r\n        return await instance.post('user/login', {...data}).then(response => response).catch((err) => {\r\n            console.log(err.status);\r\n            return err\r\n        })\r\n    },\r\n    Logout: (data) => {\r\n        return instance.delete('user/login')\r\n            .then(response => response.data);\r\n    },\r\n};\r\n\r\nexport const AuthApi = {\r\n    authMe: () => {\r\n        return instance.get('auth/me')\r\n            .then(response => response.data);\r\n    }\r\n};","import {AuthApi, LoginApi} from \"./api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\n\r\nconst AUTHORIZE_ME = 'AUTHORIZE-ME';\r\nconst SET_USER_INFO = 'SET-USER-INFO';\r\nconst DEL_USER_INFO = 'DEL-USER-INFO';\r\n\r\nconst initialState = {\r\n    authData: {\r\n        id: null,\r\n        login: null,\r\n        email: null,\r\n    },\r\n\r\n    isAuthorized: false,\r\n\r\n    currentUser: {\r\n        \"aboutMe\": null,\r\n        \"fullName\": null,\r\n        \"userId\": null,\r\n        \"photos\": {\r\n            \"small\": null,\r\n            \"large\": null\r\n        }\r\n    },\r\n};\r\n\r\nconst authorizationReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case AUTHORIZE_ME:\r\n            return {\r\n                ...state,\r\n                authData: {...action.authData},\r\n                isAuthorized: action.isAuthorized\r\n            };\r\n\r\n        case SET_USER_INFO:\r\n            return {\r\n                ...state,\r\n                currentUser: action.currentUserData\r\n            };\r\n\r\n        case DEL_USER_INFO:\r\n            return {\r\n                ...state,\r\n                authData: {...initialState.authData},\r\n                isAuthorized: action.isAuthorized\r\n            };\r\n\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport const setAuthorizeData = (authData, isAuthorized) => {\r\n    return {\r\n        type: AUTHORIZE_ME,\r\n        authData: authData.data,\r\n        isAuthorized\r\n    }\r\n};\r\n\r\nexport let setCurrentUser = (currentUserData) => {\r\n    return {\r\n        type: SET_USER_INFO,\r\n        currentUserData: currentUserData\r\n    }\r\n};\r\n\r\nexport let delCurrentUser = (isAuthorized) => {\r\n    return {\r\n        type: DEL_USER_INFO,\r\n        isAuthorized\r\n    }\r\n};\r\n\r\nexport const authorize = (props) => (dispatch) => {\r\n    return AuthApi.authMe().then(data => {\r\n        if (data.resultCode === 0) {\r\n            dispatch(setAuthorizeData(data, true));\r\n            //ProfileApi.getProfile(data.data.id).then(response => dispatch(setCurrentUser(response)));\r\n            //dispatch(setProfileInfo(data.data.id));\r\n        }\r\n    })\r\n};\r\n\r\nexport const LoginMe = (data) => (dispatch) => {\r\n    LoginApi.Login(data).then(response => {\r\n        if (response.status === 200) dispatch(authorize());\r\n        else {\r\n            let responseMessage = response.message.length > 0 ? response.message : 'Some error has occurred';\r\n            dispatch(stopSubmit('LoginForm', {_error: responseMessage}))\r\n        }\r\n    })\r\n};\r\n\r\nexport const LogOutMe = () => (dispatch) => {\r\n    LoginApi.Logout().then(response => {\r\n        if (response.resultCode === 0) dispatch(delCurrentUser(false))\r\n    })\r\n};\r\n\r\nexport default authorizationReducer;","import {AuthApi} from \"./api\";\r\nimport {authorize} from \"./authReducer\";\r\n\r\nconst APP_INITIALIZED = 'APP-INITIALIZED';\r\n\r\nconst initialState = {\r\n    isInitialized: false\r\n};\r\n\r\nconst appInitialized = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case APP_INITIALIZED:\r\n            return {\r\n                ...state,\r\n                isInitialized: action.isInitialized\r\n            };\r\n\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nconst initializeSuccess = (isInitialized) => {\r\n    return {\r\n        type: APP_INITIALIZED,\r\n        isInitialized\r\n    }\r\n\r\n};\r\n\r\nexport const initialization = () => (dispatch) => {\r\n    let promise = dispatch(authorize());\r\n\r\n    promise.then(() => dispatch(initializeSuccess(true)))\r\n};\r\n\r\nexport default appInitialized\r\n","export default __webpack_public_path__ + \"static/media/Logo.764dc346.png\";","import React from \"react\";\r\nimport logo from './Logo.png'\r\n\r\nconst Logo = () => {\r\n    return <img src={logo} alt={'logo'}/>\r\n};\r\n\r\nexport default Logo;","import React from 'react'\r\nimport s from './Header.module.css'\r\nimport Logo from \"../Common/Logo/Logo\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className={s.header}>\r\n            <h1>Subscribe</h1>\r\n            <Logo/>\r\n            <h1><NavLink to={'/login'} activeClassName={s.active} className={s.menuItem}>Login</NavLink></h1>\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default Header;","import React from 'react'\r\n\r\nexport const required = (value) => {\r\n    if (value) return undefined;\r\n    return 'Field is empty'\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length more than ${maxLength} symbols`;\r\n    return undefined;\r\n};","import React from \"react\";\r\nimport s from \"./FormControl.module.css\";\r\n\r\nexport const FormControl = ({input, meta, child, ...props}) => {\r\n    let hasError = meta.touched && meta.error;\r\n    return (\r\n        <>\r\n            {hasError && <span className={meta.form === 'LoginForm' ? s.LoginForm : s.AddPostForm}>{meta.error}</span>}\r\n            {props.children}\r\n        </>\r\n    )\r\n\r\n};\r\n\r\nexport const TextareaForm = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return (\r\n        <FormControl {...props}>\r\n            <textarea className={meta.touched && meta.error && s.error} {...input} {...restProps}/>\r\n        </FormControl>\r\n    )\r\n};\r\n\r\nexport const InputForm = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return (\r\n        <FormControl\r\n            {...props}> <input className={meta.touched && meta.error && s.error} {...input} {...restProps}/>\r\n        </FormControl>\r\n    )\r\n};\r\n","import React from 'react'\r\nimport s from './Login.module.css'\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {connect} from \"react-redux\";\r\nimport {LoginMe} from \"../../redux/authReducer\";\r\nimport {required} from \"../utils/Validators/Validators\";\r\nimport {InputForm} from \"../Common/Input/FormControl\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst LoginForm = (props) => {\r\n\r\n    if (props.isAuthorized) return <Redirect to={'/profile'}/>;\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                {props.error && <span className={s.commonError}>{props.error}</span>}\r\n            </div>\r\n\r\n            <div className={s.inputContainer}>\r\n                <span>Login</span>\r\n                <Field component={InputForm}\r\n                       name={'email'}\r\n                       type='text'\r\n                       placeholder={'Login'}\r\n                       validate={[required]}\r\n                       error={props.error}/>\r\n            </div>\r\n\r\n\r\n            <div className={s.inputContainer}>\r\n                <span>Password</span>\r\n                <Field component={InputForm}\r\n                       name={'password'}\r\n                       type='password'\r\n                       placeholder={'Password'}\r\n                       validate={[required]}\r\n                       error={props.error}/>\r\n            </div>\r\n\r\n\r\n            <div className={s.inputContainer}>\r\n                <Field className={s.checkBox}\r\n                       component={InputForm}\r\n                       name={'rememberMe'}\r\n                       type={'checkbox'}/>\r\n                <span>Remember me</span>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({form: 'LoginForm'})(LoginForm);\r\n\r\nexport const Login = (props) => {\r\n\r\n    const onSubmit = (formData) => props.LoginMe(formData);\r\n\r\n    return (\r\n        <div className={s.loginBox}>\r\n            <h1>Welcome back</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} {...props}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuthorized: state.authorization.isAuthorized\r\n});\r\n\r\nexport default connect(mapStateToProps, {LoginMe})(Login);","import React, {Component} from 'react';\nimport {Route, withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\nimport {connect} from \"react-redux\";\nimport {initialization} from \"./redux/appReducer\";\n\nimport s from './App.module.css'\nimport Header from \"./Component/Header/Header\";\nimport Login from \"./Component/Login/Login\";\n\nclass App extends Component {\n    componentDidMount(): void {\n        this.props.initialization()\n    }\n\n    render() {\n        return (\n            <div className={s.appWrapper}>\n                <Header/>\n                <Route path={'/login'}\n                       render={() => <Login/>}/>\n            </div>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    isInitialized: state.app.isInitialized\n});\n\n\nexport default compose(connect(mapStateToProps, {initialization}), withRouter)(App);","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport authorizationReducer from \"./authReducer\";\r\nimport appInitialized from \"./appReducer\";\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\n\r\nlet reducers = combineReducers({\r\n    authorization: authorizationReducer,\r\n    form: formReducer,\r\n    app: appInitialized\r\n});\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;\r\n\r\nwindow.store = store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/reduxStore'\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>,\n    document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FormControl_error__PgXFX\",\"LoginForm\":\"FormControl_LoginForm__1LLEA\",\"AddPostForm\":\"FormControl_AddPostForm__gAmcN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__34pq8\"};"],"sourceRoot":""}